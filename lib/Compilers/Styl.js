// Generated by CoffeeScript 1.6.3
(function() {
  var CompileException, Compiler, Q, Styl, path, stylus, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Q = require('q');

  stylus = require('stylus');

  path = require('path');

  Compiler = require('./Compiler');

  CompileException = require('../Exceptions/CompileException');

  Styl = (function(_super) {
    __extends(Styl, _super);

    function Styl() {
      _ref = Styl.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Styl.prototype.isCachableWithDependencies = function() {
      return true;
    };

    Styl.prototype.getMinifier = function() {
      return 'cleanCss';
    };

    Styl.prototype.parse = function(data, options) {
      var deferred, styl,
        _this = this;
      if (options == null) {
        options = {};
      }
      deferred = Q.defer();
      styl = stylus(data);
      if (options.path !== null) {
        styl.include(path.dirname(options.path));
      }
      styl.render(function(err, data) {
        if (err) {
          return deferred.reject(_this.parseError(err, options.path));
        } else {
          return deferred.resolve(data);
        }
      });
      return deferred.promise;
    };

    Styl.prototype.parseError = function(error, _path) {
      var data, e, line, msg;
      data = error.message.split('\n');
      line = data[0].split(':')[1];
      msg = data[data.length - 2];
      msg += path !== null ? " in " + _path + ":" : ' on line ';
      msg += line;
      e = new CompileException(msg);
      e.filename = _path;
      e.line = line;
      return e;
    };

    return Styl;

  })(Compiler);

  module.exports = Styl;

}).call(this);
