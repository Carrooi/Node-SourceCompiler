// Generated by CoffeeScript 1.6.3
(function() {
  var Compiler, Json, Q, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Q = require('q');

  Compiler = require('./Compiler');

  Json = (function(_super) {
    __extends(Json, _super);

    function Json() {
      _ref = Json.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Json.prototype.getMinifier = function() {
      return 'js';
    };

    Json.prototype.parse = function(data, options) {
      if (options == null) {
        options = {};
      }
      return Q.resolve("(function() {\nreturn " + data + "\n}).call(this);\n");
    };

    return Json;

  })(Compiler);

  module.exports = Json;

}).call(this);
